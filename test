from django.db.models import Count, Case, When, IntegerField
from django.db.models.functions import TruncMonth

def get_stats_par_mois():
    qs = (
        MaTable.objects
        .annotate(mois=TruncMonth("date"))
        .values("mois")
        .annotate(
            termines=Count(Case(When(statut="termine", then=1), output_field=IntegerField())),
            echecs=Count(Case(When(statut="echec", then=1), output_field=IntegerField())),
            abandonnes=Count(Case(When(statut="abandonne", then=1), output_field=IntegerField())),
        )
        .order_by("mois")
    )

    # Transformation en dict { "YYYY-MM": { "termine": X, "echec": Y, "abandonne": Z } }
    result = {
        item["mois"].strftime("%Y-%m"): {
            "termine": item["termines"],
            "echec": item["echecs"],
            "abandonne": item["abandonnes"],
        }
        for item in qs
    }
    return result


from django.db.models import Count, Case, When, IntegerField, F

stats = MaTable.objects.aggregate(
    dans_delai=Count(
        Case(
            When(real_delivery_date__lte=F("su_delivery_date"), then=1),
            output_field=IntegerField()
        )
    ),
    hors_delai=Count(
        Case(
            When(real_delivery_date__gt=F("su_delivery_date"), then=1),
            output_field=IntegerField()
        )
    )
)

print(stats)
# {"dans_delai": 120, "hors_delai": 35}


from django.db.models import Count, Case, When, IntegerField, F
from django.db.models.functions import TruncMonth
from django.contrib.postgres.aggregates import ArrayAgg

qs = (
    MaTable.objects
    .exclude(su_delivery_date__isnull=True, real_delivery_date__isnull=True)
    .annotate(mois=TruncMonth("real_delivery_date"))
    .values("mois")
    .annotate(
        dans_delai=Count(
            Case(
                When(real_delivery_date__lte=F("su_delivery_date"), then=1),
                output_field=IntegerField()
            )
        ),
        hors_delai=Count(
            Case(
                When(real_delivery_date__gt=F("su_delivery_date"), then=1),
                output_field=IntegerField()
            )
        ),
        tickets_hors_delai=ArrayAgg(
            "ticket_number",
            filter=When(real_delivery_date__gt=F("su_delivery_date"))
        )
    )
    .order_by("mois")
)