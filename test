<mxfile host="app.diagrams.net" modified="2023-12-11T08:13:52.956Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36" version="22.1.7" etag="Kn8QH1T2M5y1Ph05BDcn" type="github">
  <diagram name="Page-1" id="BbIZUBlDEvuy5OSchIG8">
    <mxGraphModel>
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
Bien s√ªr ! Voici un script VBA qui fait exactement ce que tu veux : il extrait les colonnes suivantes de la feuille active vers un nouveau fichier CSV :


---

‚úÖ Colonnes √† extraire (d‚Äôapr√®s ton image) :

Lot BI

Derni√®re version analys√©e

Version de comparaison

Analyse

Mantis d'installation

Date d‚Äôanalyse

Mantis ouvertes

Statut de la livraison

Mantis ferm√©es

Tri



---

üìú Script VBA √† copier dans l‚Äô√©diteur VBA

1. Appuie sur ALT + F11 pour ouvrir l‚Äô√©diteur VBA.


2. Ins√®re un nouveau module : Insertion > Module.


3. Colle ce code :



Sub ExportSuiviVersionsToCSV()
    Dim ws As Worksheet
    Dim exportWs As Worksheet
    Dim exportBook As Workbook
    Dim colMap As Object
    Dim header As Variant
    Dim col As Range
    Dim i As Integer, lastRow As Long
    Dim destCol As Integer
    Dim cell As Range

    ' Colonnes √† extraire
    header = Array("Lot BI", "Derni√®re version analys√©e", "Version de comparaison", _
                   "Analyse", "Mantis d'installation", "Date d‚Äôanalyse", _
                   "Mantis ouvertes", "Statut de la livraison", "Mantis ferm√©es", "Tri")

    Set ws = ActiveSheet
    Set colMap = CreateObject("Scripting.Dictionary")

    ' Trouver les colonnes correspondant aux ent√™tes
    For Each col In ws.Range("1:1")
        For i = 0 To UBound(header)
            If Trim(col.Value) = header(i) Then
                colMap(header(i)) = col.Column
            End If
        Next i
    Next col

    ' Cr√©er nouveau classeur pour l'export
    Set exportBook = Workbooks.Add
    Set exportWs = exportBook.Sheets(1)

    ' Copier les ent√™tes
    For i = 0 To UBound(header)
        exportWs.Cells(1, i + 1).Value = header(i)
    Next i

    ' Derni√®re ligne √† traiter
    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row

    ' Copier les donn√©es
    For i = 2 To lastRow
        For destCol = 0 To UBound(header)
            If colMap.exists(header(destCol)) Then
                exportWs.Cells(i, destCol + 1).Value = ws.Cells(i, colMap(header(destCol))).Value
            End If
        Next destCol
    Next i

    ' Sauvegarder sous CSV
    Dim chemin As String
    chemin = Application.ThisWorkbook.Path & "\Export_Suivi_Versions.csv"
    Application.DisplayAlerts = False
    exportBook.SaveAs Filename:=chemin, FileFormat:=xlCSV, CreateBackup:=False
    exportBook.Close SaveChanges:=False
    Application.DisplayAlerts = True

    MsgBox "Export termin√© : " & chemin, vbInformation
End Sub


---

‚ñ∂Ô∏è Comment l‚Äôutiliser

1. Va dans ton Excel ouvert.


2. Ouvre l‚Äô√©diteur avec ALT + F11.


3. Colle le code dans un nouveau module.


4. Ferme l‚Äô√©diteur.


5. Lance la macro avec ALT + F8, s√©lectionne ExportSuiviVersionsToCSV et clique sur Ex√©cuter.




---

üìÅ R√©sultat :

Un fichier Export_Suivi_Versions.csv sera cr√©√© dans le m√™me dossier que ton fichier Excel.

Souhaite-tu que je l‚Äôadapte pour filtrer certaines lignes ou transformer le contenu (ex. : supprimer les sauts de ligne dans les cellules) ?

