from django.db.models import Count, Case, When, IntegerField, F
from django.db.models.functions import TruncMonth
from django.contrib.postgres.aggregates import ArrayAgg

qs = (
    MaTable.objects
    .exclude(su_delivery_date__isnull=True, real_delivery_date__isnull=True)
    .annotate(mois=TruncMonth("real_delivery_date"))
    .values("mois")
    .annotate(
        dans_delai=Count(
            Case(
                When(real_delivery_date__lte=F("su_delivery_date"), then=1),
                output_field=IntegerField()
            )
        ),
        hors_delai=Count(
            Case(
                When(real_delivery_date__gt=F("su_delivery_date"), then=1),
                output_field=IntegerField()
            )
        ),
        tickets_hors_delai=ArrayAgg(
            "ticket_number",
            filter=When(real_delivery_date__gt=F("su_delivery_date"))
        )
    )
    .order_by("mois")
)

from django.db.models import Count, Case, When, IntegerField, F
from django.db.models.functions import TruncMonth
from django.contrib.postgres.aggregates import ArrayAgg

qs = (
    MaTable.objects
    .exclude(su_delivery_date__isnull=True, real_delivery_date__isnull=True)
    .annotate(mois=TruncMonth("real_delivery_date"))
    .values("mois")
    .annotate(
        dans_delai=Count(
            Case(
                When(real_delivery_date__lte=F("su_delivery_date"), then=1),
                output_field=IntegerField()
            )
        ),
        hors_delai=Count(
            Case(
                When(real_delivery_date__gt=F("su_delivery_date"), then=1),
                output_field=IntegerField()
            )
        ),
        tickets_hors_delai=ArrayAgg(
            "ticket_number",
            filter=When(real_delivery_date__gt=F("su_delivery_date"))
        )
    )
    .order_by("mois")
)

// Dictionnaire de couleurs fixes par type
const colorsByKey = {
  "1": "#4e79a7",
  "2": "#f28e2b",
  "3": "#e15759",
  "4": "#76b7b2",
  "5": "#59a14f",
  "6": "#edc949"
};

// Si jamais une clé n’existe pas, on met une couleur par défaut
function getColorForKey(key) {
  return colorsByKey[key] || "#999999";
}